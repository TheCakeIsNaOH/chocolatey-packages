<?xml version="1.0" encoding="utf-8"?>
<!-- Do not remove this test for UTF-8: if “Ω” doesn’t appear as greek uppercase omega letter enclosed in quotation marks, you should use an editor that supports UTF-8, not this one. -->
<package xmlns="http://schemas.microsoft.com/packaging/2015/06/nuspec.xsd">
  <metadata>
    <id>looking-glass-host-bleeding-edge</id>
    <version>0.0.0.0-B7-25-bf59e451</version>
    <packageSourceUrl>https://github.com/TheCakeIsNaOH/chocolatey-packages/tree/master/</packageSourceUrl>
    <owners>TheCakeIsNaOH</owners>
    <title>Looking Glass (Host Bleeding-Edge)</title>
    <authors>Geoffrey McRae</authors>
    <projectUrl>https://looking-glass.io/</projectUrl>
    <iconUrl>https://cdn.statically.io/gh/TheCakeIsNaOH/chocolatey-packages/97fc87d57673255d9490a64e54bea94a3db79616/Icons/looking-glass-host.png</iconUrl>
    <copyright>2021 Geoffrey McRae</copyright>
    <licenseUrl>https://github.com/gnif/LookingGlass/blob/master/LICENSE</licenseUrl>
    <requireLicenseAcceptance>true</requireLicenseAcceptance>
    <projectSourceUrl>https://github.com/gnif/LookingGlass</projectSourceUrl>
    <docsUrl>https://looking-glass.io/wiki/Main_Page</docsUrl>
    <bugTrackerUrl>https://github.com/gnif/LookingGlass/issues</bugTrackerUrl>
    <tags>Looking Glass Host VFIO KVM PCIe Passthrough VM Virtual Machine</tags>
    <summary>An extremely low latency KVMFR (KVM FrameRelay) implementation for guests with VGA PCI Passthrough.</summary>
    <description>Looking Glass is an open source application that allows the use of a KVM (Kernel-based Virtual Machine) configured for VGA PCI Pass-through without an attached physical monitor, keyboard or mouse. This is the final step required to move away from dual booting with other operating systems for legacy programs that require high performance graphics.
    
#### Performance and Latency
Looking Glass is targeted at extremely low latency use requirements on the local computer, it is not designed to stream over a network or pipe but rather through a block of shared memory. In current testing at a refresh rate of 60Hz it is possible to obtain equal or better then 16 milliseconds of latency with the guest. If the user doesn't care for VSYNC this can be further reduced to under a few milliseconds on average.

#### Compression
Unlike network based streaming applications, Looking Glass does not use any form of compression or color space conversion, all frames are transferred to the viewer (client application) in 32-bit RGBA without any transformations or modifications. This is possible through the use of a shared memory segment which enables extremely high throughput low latency guest to host communication.

### Important note
This host application needs to have the same protocol version as the client to be able to work.

On option is to pin the package version to halt updates, and unpin it when you are ready to update.
`choco pin add -n looking-glass-host`
`choco pin remove -n looking-glass-host`

The other option is to not run `choco update all`, but only run `choco update` on specific packages.

### Package Parameters
The following package parameters can be set:

 * `/PATH:installdirectory` - Install Looking Glass (host) to a custom directory
 * `/STARTMENU` - Create a start menu shortcut during install
 * `/DESKTOP` - Create a desktop shortcut during install
 * `/NOSERVICE` - Do not create the service to auto start and elevate Looking Glass (host)

To pass parameters, use `--params "''"` (e.g. `choco install packageID [other options] --params="'/ITEM:value /ITEM2:value2 /FLAG_BOOLEAN'"`).
To have choco remember parameters on upgrade, be sure to set `choco feature enable -n=useRememberedArgumentsForUpgrades`.</description>
    <releaseNotes>https://github.com/gnif/LookingGlass/releases</releaseNotes>
  </metadata>
  <files>
    <file src="tools\**" target="tools" />
    <file src="legal\**" target="legal" />
  </files>
</package>
