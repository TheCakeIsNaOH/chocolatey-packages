# AU template: https://github.com/majkinetor/au-packages-template

version: '{build}'
max_jobs: 1
# History plugin requires complete log
#clone_depth: 5
branches:
  only:
  - master
#build:
#  verbosity: minimal

image: Visual Studio 2022

environment:
  # Set au version to use or omit to use the latest. Specify branch name to use development version from Github
  au_version:
  au_push: true
  # Force test: use 1 to test all, or N to split testing into N groups
  au_test_groups: 1

  # Github token to commit pushed packages to repository
  github_user_repo: TheCakeIsNaOH/chocolatey-packages
  github_user_name: TheCakeIsNaOH
  github_api_key:
    secure: OsxofjYX6YNkAchLzX7IZTkfcDvzQ5sVuZ0Cer7dPy7Au1LWdJLobrBRB5H3stCd #https://ci.appveyor.com/tools/encrypt


  # Mail credentials - for error notifications
  mail_user: thecakeisnaoh@gmail.com 
  mail_pass:
    secure: K5LGex/MH0MUybHVRE0sF7a0/DrtHER3vsCorVXuW3A=
  mail_server: smtp.gmail.com
  mail_port: 587
  mail_enablessl: true

  # ID of the gist used to save run results - create a gist under the github_user (secret or not) and grab the id - https://gist.github.com/name/id
  # Optional, leave empty to create anonymous gist
  gist_id: ce0572a342ee6b22e44239db8c54f8b1

  # Force test: gist id for test results
  gist_id_test: 5f8c63d32652d30123db06d1d0809dd4

  # Chocolatey API key - to push updated packages
  api_key:
    secure: /ZIlP5vMoltd8ahqeM3J/uS/PilznewWI98cViyqmkQMqgD+fWaULLEZ1arOEbJ5
    
  choco_version: '2.2.2'
  nupkg_cache_path: C:\packages

init:
- git config --global user.email "naoh-bot@naoh.host"
- git config --global user.name "TheCakeIsNaOH's bot"
- git config --global core.safecrlf false

install:
- ps: |
    $chocoVersion = $Env:choco_version
    if (!(Test-Path "$env:nupkg_cache_path")) { mkdir -Force "$env:nupkg_cache_path" }
    @{
      #'chocolatey' = $chocoVersion
      'wormies-au-helpers' = '0.4.1'
      'chocolatey-au' = '1.0.0'
    }.GetEnumerator() | % {
      if (!(Test-Path "${env:nupkg_cache_path}\$($_.Key).$($_.Value).nupkg")) { rm "${env:nupkg_cache_path}\$($_.Key).*.nupkg" ; iwr "https://chocolatey.org/api/v2/package/$($_.Key)/$($_.Value)" -OutFile "${env:nupkg_cache_path}\$($_.Key).$($_.Value).nupkg" }
      if ($_.Key -eq 'chocolatey') { choco upgrade $_.Key --version $_.Value --source ${env:nupkg_cache_path} --allow-downgrade --pre }
      else { choco install $_.Key --version $_.Value --source ${env:nupkg_cache_path} --ignore-dependencies }
    }
    rm "$env:ChocolateyInstall\logs\*.log"
- ps: 'Get-CimInstance win32_operatingsystem -Property Caption, OSArchitecture, Version | fl Caption, OSArchitecture, Version'
- ps: $PSVersionTable
- git --version
- choco --version
#- ps: |
#    git clone -q https://github.com/chocolatey-community/chocolatey-au.git $Env:TEMP/au
#    . "$Env:TEMP/au/scripts/Install-AU.ps1" $Env:au_version
- ps: |
    "Build info"
    '  {0,-20} {1}' -f 'SCHEDULED BUILD:', ($Env:APPVEYOR_SCHEDULED_BUILD -eq 'true')
    '  {0,-20} {1}' -f 'FORCED BUILD:'   , ($Env:APPVEYOR_FORCED_BUILD    -eq 'true')
    '  {0,-20} {1}' -f 'RE BUILD:'       , ($Env:APPVEYOR_RE_BUILD        -eq 'true')

# Uncomment the below line if you are using any of the functions from chocolatey-core.extension - https://chocolatey.org/packages/chocolatey-core.extension. Ensure you also have it listed in your package's dependencies
# - choco install chocolatey-core.extension
    
build_script:
- ps: |
    $ErrorActionPreference = 'Continue'
    Import-Module wormies-au-helpers

    if ($Env:APPVEYOR_PROJECT_NAME  -like '*test*') { ./test_all.ps1 "random $Env:au_test_groups"; return }

    if ( ($Env:APPVEYOR_SCHEDULED_BUILD -ne 'true') -and ($Env:APPVEYOR_FORCED_BUILD -ne 'true') ) {
        switch -regex ($Env:APPVEYOR_REPO_COMMIT_MESSAGE)
        {
            '\[AU (.+?)\]'   { $forced = $Matches[1] }

            '\[PUSH (.+?)\]' {
                $packages = $Matches[1] -split ' '
                Write-Host "PUSHING PACKAGES: $packages"
                foreach ($package in $packages) {
                    Write-Host ("{0}`n{1}`n" -f ('-'*60), "PACKAGE: $package")
                    $package_dir = ls -recurse | ? { $_.Name -eq "$package.nuspec"} | select -First 1 | % Directory
                    if (!$package_dir) { Write-Warning "Can't find package '$package'"; continue }
                    pushd $package_dir
                      if (Test-Path update.ps1 -ea 0) { ./update.ps1 }
                      choco pack; Push-Package;
                    popd
                }
                return
            }
        }
    }

    ./update_all.ps1 -ForcedPackages $forced
    
    write-host (Get-ChildItem -Recurse -Filter *.nupkg)
    
    7z a au_temp.zip $Env:TEMP\chocolatey\au\*

artifacts:
- path: update_info.xml
- path: Update-AUPackages.md
- path: au_temp.zip

notifications:
- provider: Email
  to: $(mail_user)
  on_build_success: false
  on_build_failure: true
  on_build_status_changed: false

#on_finish:
#- ps: $blockRdp = $true; iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))

cache:
  - '%nupkg_cache_path% -> .appveyor.yml'
